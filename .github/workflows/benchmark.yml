# Copyright (c) 2022 Sapphire's Suite. All Rights Reserved.

name: Benchmark

# Trigger the action.
on:
  push:
    branches:
      - benchmark
      - bench_*


# Settings common to all jobs.
defaults:
  run:
    shell: bash


# Variables common to all jobs.
env:
  CMAKE_V: '3.17.0'
  CMAKE_OPTIONS: '-DSA_CI=1 -DSA_MATHS_BUILD_TESTS_OPT=ON -DSA_MATHS_BUILD_BENCHMARK_OPT=ON -DSA_MATHS_USE_LOGGER_OPT=OFF'


# Job matrix
jobs:

  GNU:
    name: GNU (${{ matrix.compiler_v }}, SIMD:${{ matrix.option_SIMD }})

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler_v: [9, 10, 11]
        option_SIMD: [ON, OFF]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: seanmiddleditch/gha-setup-ninja@master # Install Ninja.
      - name: "[Package] Install GCC"
        run: |
            sudo apt-get install g++-${{ matrix.compiler_v }}
            echo "CC=gcc-${{ matrix.compiler_v }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.compiler_v }}" >> $GITHUB_ENV
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_OPTIONS }} -DSA_MATHS_INTRINSICS_OPT=${{ matrix.option_SIMD }} -G Ninja
      - name: Build Project
        run: cmake --build Build --target SA_MathsBenchmark --config Release --verbose
      - name: Run Benchmark
        run: cd Build/bin && ./SA_MathsBenchmark

  Clang:
    name: Clang (${{ matrix.compiler_v }}, SIMD:${{ matrix.option_SIMD }})

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler_v: [9, 10, 11, 12]
        option_SIMD: [ON, OFF]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: seanmiddleditch/gha-setup-ninja@master # Install Ninja.
      - name: "[Package] Install LLVM and Clang"
        if: ${{ matrix.compiler == 'Clang' }}
        run: |
            sudo apt-get install clang-${{ matrix.compiler_v }}
            echo "CC=clang-${{ matrix.compiler_v }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.compiler_v }}" >> $GITHUB_ENV
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_OPTIONS }} -DSA_MATHS_INTRINSICS_OPT=${{ matrix.option_SIMD }} -G Ninja
      - name: Build Project
        run: cmake --build Build --target SA_MathsBenchmark --config Release --verbose
      - name: Run Benchmark
        run: cd Build/bin && ./SA_MathsBenchmark


  MSVC_2017:
    name: MSVC (2017, SIMD:${{ matrix.option_SIMD }})

    runs-on: windows-2016
    strategy:
      fail-fast: false
      matrix:
        option_SIMD: [ON, OFF]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_OPTIONS }} -DSA_MATHS_INTRINSICS_OPT=${{ matrix.option_SIMD }} -G "Visual Studio 15 2017" -A x64
      - name: Build Project
        run: cmake --build Build --target SA_MathsBenchmark --config Release --verbose
      - name: Run Benchmark
        run: cd Build/bin/Release && ./SA_MathsBenchmark.exe


  MSVC_2019:
    name: MSVC (2019, SIMD:${{ matrix.option_SIMD }})

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        option_SIMD: [ON, OFF]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_OPTIONS }} -DSA_MATHS_INTRINSICS_OPT=${{ matrix.option_SIMD }} -G "Visual Studio 16 2019" -A x64
      - name: Build Project
        run: cmake --build Build --target SA_MathsBenchmark --config Release --verbose
      - name: Run Benchmark
        run: cd Build/bin/Release && ./SA_MathsBenchmark.exe


  MSVC_2022:
    name: MSVC (2022, SIMD:${{ matrix.option_SIMD }})

    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        option_SIMD: [ON, OFF]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_OPTIONS }} -DSA_MATHS_INTRINSICS_OPT=${{ matrix.option_SIMD }} -G "Visual Studio 17 2022" -A x64
      - name: Build Project
        run: cmake --build Build --target SA_MathsBenchmark --config Release --verbose
      - name: Run Benchmark
        run: cd Build/bin/Release && ./SA_MathsBenchmark.exe
        